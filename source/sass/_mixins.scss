// 100% width viewport margins
@mixin  full-width-margins {
    margin: 0 calc(-100vw / 2 + #{$container-width} / 2);
}

// dynamically sized media queries - inspired by Bootstrap 4
@mixin media-query-up($size) {
    @if $size == xs {
        @media (min-width: 400px) {
            @content;
        }
    } @else if $size == sm {
        @media (min-width: 576px) {
            @content;
        }
    } @else if $size == md {
        @media (min-width: 768px) {
            @content;
        }
    } @else if $size == lg {
        @media (min-width: 992px) {
            @content;
        }
    } @else if $size == xl {
        @media (min-width: 1200px) {
            @content;
        }
    }
}

@mixin media-query-down($size) {
    @if $size == xs {
        @media (max-width: 575.98px) {
            @content;
        }
    } @else if $size == sm {
        @media (max-width: 767.98px) {
            @content;
        }
    } @else if $size == md {
        @media (max-width: 991.98px) {
            @content;
        }
    } @else if $size == lg {
        @media (max-width: 1199.98px) {
            @content;
        }
    }
}

// fluid typography
@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
    @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
        & {
            font-size: $min-font-size;
            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}